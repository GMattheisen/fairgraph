try:
    from .minds import *
except ModuleNotFoundError:
    from minds import *
    
#################################################################################################
##### The following code is generated by the script in queries/code_generation_from_KGE_queries
#################################################################################################
class Abstractionlevel(MINDSObject):
    """
    docstring
    """
    _path = "/options/abstractionlevel/v1.0.0"
    type = ["uniminds:Abstractionlevel"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Agecategory(MINDSObject):
    """
    docstring
    """
    _path = "/options/agecategory/v1.0.0"
    type = ["uniminds:Agecategory"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Brainstructure(MINDSObject):
    """
    docstring
    """
    _path = "/options/brainstructure/v1.0.0"
    type = ["uniminds:Brainstructure"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Cellulartarget(MINDSObject):
    """
    docstring
    """
    _path = "/options/cellulartarget/v1.0.0"
    type = ["uniminds:Cellulartarget"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Country(MINDSObject):
    """
    docstring
    """
    _path = "/options/country/v1.0.0"
    type = ["uniminds:Country"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Dataset(MINDSObject):
    """
    docstring
    """
    _path = "/core/dataset/v1.0.0"
    type = ["uniminds:Dataset"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("intendedReleaseDate", basestring, "https://schema.hbp.eu/uniminds/intendedReleaseDate", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Disability(MINDSObject):
    """
    docstring
    """
    _path = "/options/disability/v1.0.0"
    type = ["uniminds:Disability"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Doi(MINDSObject):
    """
    docstring
    """
    _path = "/options/doi/v1.0.0"
    type = ["uniminds:Doi"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("citation", basestring, "https://schema.hbp.eu/uniminds/citation", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Embargostatus(MINDSObject):
    """
    docstring
    """
    _path = "/options/embargostatus/v1.0.0"
    type = ["uniminds:Embargostatus"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Ethicsapproval(MINDSObject):
    """
    docstring
    """
    _path = "/core/ethicsapproval/v1.0.0"
    type = ["uniminds:Ethicsapproval"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("hbpEthicsApproval", basestring, "https://schema.hbp.eu/uniminds/hbpEthicsApproval", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Ethicsauthority(MINDSObject):
    """
    docstring
    """
    _path = "/options/ethicsauthority/v1.0.0"
    type = ["uniminds:Ethicsauthority"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Experimentalpreparation(MINDSObject):
    """
    docstring
    """
    _path = "/options/experimentalpreparation/v1.0.0"
    type = ["uniminds:Experimentalpreparation"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class File(MINDSObject):
    """
    docstring
    """
    _path = "/core/file/v1.0.0"
    type = ["uniminds:File"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False),
      Field("url", basestring, "http://schema.org/url", required=False))
    


class Fileassociation(MINDSObject):
    """
    docstring
    """
    _path = "/core/fileassociation/v1.0.0"
    type = ["uniminds:Fileassociation"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("from", basestring, "https://schema.hbp.eu/linkinginstance/from", required=False),
      Field("hashcode", basestring, "https://schema.hbp.eu/internal/hashcode", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("to", basestring, "https://schema.hbp.eu/linkinginstance/to", required=False),
      Field("type", basestring, "@type", required=False))
    


class Filebundle(MINDSObject):
    """
    docstring
    """
    _path = "/core/filebundle/v1.0.0"
    type = ["uniminds:Filebundle"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False),
      Field("url", basestring, "http://schema.org/url", required=False),
      Field("usageNotes", basestring, "https://schema.hbp.eu/uniminds/usageNotes", required=False))
    


class Filebundlegroup(MINDSObject):
    """
    docstring
    """
    _path = "/options/filebundlegroup/v1.0.0"
    type = ["uniminds:Filebundlegroup"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Fundinginformation(MINDSObject):
    """
    docstring
    """
    _path = "/core/fundinginformation/v1.0.0"
    type = ["uniminds:Fundinginformation"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("grantId", basestring, "https://schema.hbp.eu/uniminds/grantId", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Genotype(MINDSObject):
    """
    docstring
    """
    _path = "/options/genotype/v1.0.0"
    type = ["uniminds:Genotype"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Handedness(MINDSObject):
    """
    docstring
    """
    _path = "/options/handedness/v1.0.0"
    type = ["uniminds:Handedness"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Hbpcomponent(MINDSObject):
    """
    docstring
    """
    _path = "/core/hbpcomponent/v1.0.0"
    type = ["uniminds:Hbpcomponent"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("associatedTask", basestring, "https://schema.hbp.eu/uniminds/associatedTask", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class License(MINDSObject):
    """
    docstring
    """
    _path = "/options/license/v1.0.0"
    type = ["uniminds:License"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("fullName", basestring, "https://schema.hbp.eu/uniminds/fullName", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False),
      Field("url", basestring, "http://schema.org/url", required=False))
    


class Method(MINDSObject):
    """
    docstring
    """
    _path = "/core/method/v1.0.0"
    type = ["uniminds:Method"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("fullName", basestring, "https://schema.hbp.eu/uniminds/fullName", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Methodcategory(MINDSObject):
    """
    docstring
    """
    _path = "/options/methodcategory/v1.0.0"
    type = ["uniminds:Methodcategory"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Mimetype(MINDSObject):
    """
    docstring
    """
    _path = "/options/mimetype/v1.0.0"
    type = ["uniminds:Mimetype"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Modelformat(MINDSObject):
    """
    docstring
    """
    _path = "/options/modelformat/v1.0.0"
    type = ["uniminds:Modelformat"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Modelinstance(MINDSObject):
    """
    docstring
    """
    _path = "/core/modelinstance/v1.0.0"
    type = ["uniminds:Modelinstance"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("license", basestring, "http://schema.org/license", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False),
      Field("version", basestring, "http://schema.org/version", required=False))
    


class Modelscope(MINDSObject):
    """
    docstring
    """
    _path = "/options/modelscope/v1.0.0"
    type = ["uniminds:Modelscope"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Organization(MINDSObject):
    """
    docstring
    """
    _path = "/options/organization/v1.0.0"
    type = ["uniminds:Organization"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Person(MINDSObject):
    """
    docstring
    """
    _path = "/core/person/v1.0.0"
    type = ["uniminds:Person"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("email", basestring, "http://schema.org/email", required=False),
      Field("familyName", basestring, "http://schema.org/familyName", required=False),
      Field("givenName", basestring, "http://schema.org/givenName", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("orcid", basestring, "https://schema.hbp.eu/uniminds/orcid", required=False),
      Field("type", basestring, "@type", required=False),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False))
    
    @property
    def full_name(self):
        return '{self.givenName} {self.familyName}'.format(self=self)

    @property
    def _existence_query(self):
        return {
            "op": "and",
            "value": [
                {
                    "path": "schema:familyName",
                    "op": "eq",
                    "value": self.familyName
                },
                {
                    "path": "schema:givenName",
                    "op": "eq",
                    "value": self.givenName
                }
            ]
        }


class Project(MINDSObject):
    """
    docstring
    """
    _path = "/core/project/v1.0.0"
    type = ["uniminds:Project"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "", required=False))
    


class Publication(MINDSObject):
    """
    docstring
    """
    _path = "/core/publication/v1.0.0"
    type = ["uniminds:Publication"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False),
      Field("url", basestring, "http://schema.org/url", required=False))
    


class Publicationid(MINDSObject):
    """
    docstring
    """
    _path = "/options/publicationid/v1.0.0"
    type = ["uniminds:Publicationid"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Publicationidtype(MINDSObject):
    """
    docstring
    """
    _path = "/options/publicationidtype/v1.0.0"
    type = ["uniminds:Publicationidtype"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Sex(MINDSObject):
    """
    docstring
    """
    _path = "/options/sex/v1.0.0"
    type = ["uniminds:Sex"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Species(MINDSObject):
    """
    docstring
    """
    _path = "/options/species/v1.0.0"
    type = ["uniminds:Species"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Strain(MINDSObject):
    """
    docstring
    """
    _path = "/options/strain/v1.0.0"
    type = ["uniminds:Strain"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Studytarget(MINDSObject):
    """
    docstring
    """
    _path = "/core/studytarget/v1.0.0"
    type = ["uniminds:Studytarget"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("fullName", basestring, "https://schema.hbp.eu/uniminds/fullName", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Studytargetsource(MINDSObject):
    """
    docstring
    """
    _path = "/options/studytargetsource/v1.0.0"
    type = ["uniminds:Studytargetsource"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Studytargettype(MINDSObject):
    """
    docstring
    """
    _path = "/options/studytargettype/v1.0.0"
    type = ["uniminds:Studytargettype"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Subject(MINDSObject):
    """
    docstring
    """
    _path = "/core/subject/v1.0.0"
    type = ["uniminds:Subject"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("age", basestring, "https://schema.hbp.eu/uniminds/age", required=False),
      Field("ageRangeMax", basestring, "https://schema.hbp.eu/uniminds/ageRangeMax", required=False),
      Field("ageRangeMin", basestring, "https://schema.hbp.eu/uniminds/ageRangeMin", required=False),
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Subjectgroup(MINDSObject):
    """
    docstring
    """
    _path = "/core/subjectgroup/v1.0.0"
    type = ["uniminds:Subjectgroup"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("ageRangeMax", basestring, "https://schema.hbp.eu/uniminds/ageRangeMax", required=False),
      Field("ageRangeMin", basestring, "https://schema.hbp.eu/uniminds/ageRangeMin", required=False),
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("description", basestring, "http://schema.org/description", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("numOfSubjects", basestring, "https://schema.hbp.eu/uniminds/numOfSubjects", required=False),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))
    


class Tissuesample(MINDSObject):
    """
    docstring
    """
    _path = "/core/tissuesample/v1.0.0"
    type = ["uniminds:Tissuesample"]

    def __repr__(self):
        return ('{self.__class__.__name__}('
                '{self.name!r} {self.id!r})'.format(self=self))
    fields = (\
      Field("alternatives", basestring, "https://schema.hbp.eu/inference/alternatives", required=False),
      Field("createdAt", basestring, "https://schema.hbp.eu/provenance/createdAt", required=False),
      Field("createdBy", basestring, "https://schema.hbp.eu/provenance/createdBy", required=False),
      Field("id", basestring, "@id", required=True),
      Field("identifier", basestring, "http://schema.org/identifier", required=True),
      Field("immediateIndex", basestring, "https://schema.hbp.eu/provenance/immediateIndex", required=False),
      Field("lastModificationUserId", basestring, "https://schema.hbp.eu/provenance/lastModificationUserId", required=False),
      Field("modifiedAt", basestring, "https://schema.hbp.eu/provenance/modifiedAt", required=False),
      Field("name", basestring, "http://schema.org/name", required=True),
      Field("relativeUrl", basestring, "https://schema.hbp.eu/relativeUrl", required=False),
      Field("type", basestring, "@type", required=False))

################################################################    
### end of script-generated code
################################################################    

def list_kg_classes():
    """List all KG classes defined in this module"""
    return [obj for name, obj in inspect.getmembers(sys.modules[__name__])
            if inspect.isclass(obj) and issubclass(obj, KGObject) and obj.__module__ == __name__]
    

class UniMINDSOption():
    pass


if __name__=='__main__':

    import os
    from fairgraph import uniminds, KGClient
    token = os.environ['HBP_token']
    client = KGClient(token)
    for cls in uniminds.list_kg_classes():
        print(cls.__name__)
        # for f in cls.fields:
        #     print('    - %s' % f.name)
